@using DatatableHtmlHelper.DataTableHelper
@{
    Layout = null;
    var dataTableColumns = new List<DataTableColumn>()
    {
        new DataTableColumn("Office","Office", 3,false,false),
        new DataTableColumn("Name","Name", 1,true,false),
        new DataTableColumn("Position","Position", 2,true,true),
        new DataTableColumn("Start Date","StartDate", 5,true,false),
        new DataTableColumn("Salary","Salary", 6,false,false),
        new DataTableColumn("Salary","Age", 4,false,false),
        new DataTableColumn("Id","Id", 7,false,false)
    };
}
<!DOCTYPE html>
<html>
<head>
    <title>Data table</title>
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/dt/jq-2.2.3/dt-1.10.12/datatables.min.css" />

    <script type="text/javascript" src="https://cdn.datatables.net/v/dt/jq-2.2.3/dt-1.10.12/datatables.min.js"></script>
</head>
<body>

    @Html.Datatable("datatable").AddColumns(dataTableColumns).AddHtmlAttributes(new { @class = "display", cellspacing = "0", width = "100%" }).AddDataTableOption(new
{
    processing = true,
    serverSide = true,
    paging = true,
    rowId = "Id",
    ajax = $"{{\"url\" : \"{Url.Action("GetData", "Employee")}\",\"type\": \"POST\",\"contentType\": \'application/json; charset=utf-8\', \"data\" : function(data){{return data = JSON.stringify(data);}}}}",
}).ToHtml()
    
    
    @*@Html.Datatable("datatable").AddColumns(dataTableColumns).AddHtmlAttributes(new { @class = "display", cellspacing = "0", width = "100%" }).AddDataTableOption(new
{
    processing = true,
    serverSide = true,
    paging = true,
    rowId = "Id",
    ajax = Url.Action("GetData", "Employee"),
}).ToHtml()*@
</body>
</html>
